X-PhraseApp-OTP:
  in: header
  name: X-PhraseApp-OTP
  description: Two-Factor-Authentication token (optional)
  required: false
  allowEmptyValue: false
  schema:
    type: string
If-Modified-Since:
  description: 'Last modified condition, see [Conditional GET requests / HTTP Caching](/en/api/strings/pagination#conditional-get-requests-%2F-http-caching) (optional)'
  explode: false
  in: header
  name: If-Modified-Since
  required: false
  schema:
    type: string
  style: simple
If-None-Match:
  description: 'ETag condition, see [Conditional GET requests / HTTP Caching](/en/api/strings/pagination#conditional-get-requests-%2F-http-caching) (optional)'
  explode: false
  in: header
  name: If-None-Match
  required: false
  schema:
    type: string
  style: simple
account_id:
  in: path
  name: account_id
  description: Account ID
  required: true
  schema:
    type: string
custom_metadata_data_type:
  in: query
  name: data_type
  description: Data Type of Custom Metadata Property
  required: false
  schema:
    "$ref": "./schemas/custom_metadata_data_type.yaml#/data_type"
  example: boolean
query_account_id:
  in: query
  name: account_id
  description: Filter by Account ID
  required: false
  schema:
    type: string
repo_sync_id:
  in: path
  name: repo_sync_id
  description: Repo Sync ID
  required: true
  schema:
    type: string
space_id:
  in: path
  name: space_id
  description: Space ID
  required: true
  schema:
    type: string
team_id:
  in: path
  name: team_id
  description: Team ID
  required: true
  schema:
    type: string
project_id:
  in: path
  name: project_id
  description: Project ID
  required: true
  schema:
    type: string
key_id:
  in: path
  name: key_id
  description: Translation Key ID
  required: true
  schema:
    type: string
key_id_as_id:
  in: path
  name: id
  description: Parent Translation Key ID
  required: true
  schema:
    type: string
figma_attachment_id:
  in: path
  name: figma_attachment_id
  description: Figma attachment ID
  required: true
  schema:
    type: string
job_id:
  in: path
  name: job_id
  description: Job ID
  required: true
  schema:
    type: string
job_template_id:
  in: path
  name: job_template_id
  description: Job Template ID
  required: true
  schema:
    type: string
job_template_locale_id:
  in: path
  name: job_template_locale_id
  description: Job Template Locale ID
  required: true
  schema:
    type: string
distribution_id:
  in: path
  name: distribution_id
  description: Distribution ID
  required: true
  schema:
    type: string
screenshot_id:
  in: path
  name: screenshot_id
  description: Screenshot ID
  required: true
  schema:
    type: string
translation_id:
  in: path
  name: translation_id
  description: Translation ID
  required: true
  schema:
    type: string
glossary_id:
  in: path
  name: glossary_id
  description: Glossary ID
  required: true
  schema:
    type: string
comment_id:
  in: path
  name: comment_id
  description: Comment ID
  required: true
  schema:
    type: string
term_id:
  in: path
  name: term_id
  description: Term ID
  required: true
  schema:
    type: string
locale_codes:
  in: query
  name: locale_codes
  description: Locale Code
  required: false
  schema:
    type: string
locale_id:
  in: path
  name: locale_id
  description: Locale ID
  required: true
  schema:
    type: string
locale_id_as_id:
  in: path
  name: id
  description: Locale ID or locale name
  required: true
  schema:
    type: string
id:
  in: path
  name: id
  description: ID
  required: true
  schema:
    type: string
name:
  in: path
  name: name
  description: name
  required: true
  schema:
    type: string
tag:
  in: query
  name: tag
  description: tag
  required: false
  schema:
    type: string
branch:
  name: branch
  in: query
  description: Branch to use
  schema:
    type: string
  example: my-feature-branch
page:
  in: query
  name: page
  description: Page number
  required: false
  allowEmptyValue: false
  schema:
    type: integer
  example: 1
per_page:
  in: query
  name: per_page
  description: Limit on the number of objects to be returned, between 1 and 100. 25 by default
  required: false
  allowEmptyValue: false
  schema:
    type: integer
  example: 25
webhook_id:
  in: path
  name: webhook_id
  description: Webhook ID
  required: true
  schema:
    type: string
response_status_codes:
  in: query
  name: response_status_codes
  description: List of Response Status Codes
  required: false
  schema:
    type: string
q:
  description: |
    Specify a query to do broad search for keys by name (including wildcards).

    The following qualifiers are also supported in the search term:

    - `ids:key_id,...` for queries on a comma-separated list of ids
    - `name:key_name` for text queries on exact key names - spaces, commas, and colons  need to be escaped with double backslashes
    - `tags:tag_name` to filter for keys with certain tags
    - `translated:{true|false}` for translation status (also requires `locale_id` to be specified)
    - `updated_at:{>=|<=}2013-02-21T00:00:00Z` for date range queries
    - `unmentioned_in_upload:upload_id,...` to filter keys unmentioned within upload. When multiple upload IDs provided, matches only keys not mentioned in **all** uploads

    **Caution:** Query parameters with empty values will be treated as though they are not included in the request and will be ignored.

    Find more examples [here](/en/api/strings/usage-examples).
  example: mykey* translated:true
  name: q
  in: query
  schema:
    type: string
job_owner:
  description: filter by user owning job
  example: abcd1234cdef1234abcd1234cdef1234
  name: owned_by
  in: query
  schema:
    type: string
job_assignee:
  description: filter by user assigned to job
  example: abcd1234cdef1234abcd1234cdef1234
  name: assigned_to
  in: query
  schema:
    type: string
job_state:
  description: 'filter by state of job; valid states are: `draft`, `in_progress`, `completed`'
  example: completed
  name: state
  in: query
  schema:
    type: string
job_updated_since:
  description: filter by jobs updated since given date
  example: 2013-02-21T00:00:00Z
  name: updated_since
  in: query
  schema:
    type: string
