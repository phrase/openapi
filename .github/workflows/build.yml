name: API CLients
on:
  push:
    branches:
      - master
jobs:
  build-go:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14
      - name: Build and Deploy üöÄ
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install
          npm run generate.go
          git clone https://$API_TOKEN_GITHUB@github.com/phrase/phrase-go.git clones/go &> /dev/null
          rsync -avI --delete --exclude='.git/' clients/go/ clones/go
          cd clones/go
          git status --verbose
          if [ -n "$(git status --porcelain)" ]; then
          git config --global user.email "support@phrase.com"
          git config --global user.name "Phrase"
          git add .
          git commit --message "Deploying from  phrase/openapi@${GITHUB_SHA::8}"
          PACKAGE_VERSION=$(awk '/- Package version:/{print $NF}' README.md)
          git tag -a v$PACKAGE_VERSION -m v$PACKAGE_VERSION || true
          git push --tags origin master
          else
          echo "  No changes, skipping."
          fi

  build-cli:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14
      - name: Build and Deploy üöÄ
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install
          npm run generate.cli
          git clone https://$API_TOKEN_GITHUB@github.com/phrase/phrase-cli.git clones/cli &> /dev/null
          rsync -avI --delete --exclude='.git/' clients/cli/ clones/cli
          cd clones/cli
          git status --verbose
          if [ -n "$(git status --porcelain)" ]; then
          git config --global user.email "support@phrase.com"
          git config --global user.name "Phrase"
          git add .
          git commit --message "Deploying from  phrase/openapi@${GITHUB_SHA::8}"
          PACKAGE_VERSION=$(awk '/- Package version:/{print $NF}' README.md)
          git tag -a $PACKAGE_VERSION -m $PACKAGE_VERSION || true
          git push --tags origin master
          else
          echo "  No changes, skipping."
          fi

  build-ruby:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Build and Deploy üöÄ
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install
          npm run generate.ruby
          git clone https://$API_TOKEN_GITHUB@github.com/phrase/phrase-ruby.git clones/ruby &> /dev/null
          rsync -avI --delete --exclude='.git/' clients/ruby/ clones/ruby
          cd clones/ruby
          git status --verbose
          if [ -n "$(git status --porcelain)" ]; then
          git config --global user.email "support@phrase.com"
          git config --global user.name "Phrase"
          git add .
          git commit --message "Deploying from  phrase/openapi@${GITHUB_SHA::8}"
          PACKAGE_VERSION=$(awk '/- Package version:/{print $NF}' README.md)
          git tag -a $PACKAGE_VERSION -m $PACKAGE_VERSION || true
          git push --tags origin master
          else
          echo "  No changes, skipping."
          fi

  build-typescript:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Build and Deploy üöÄ
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install
          npm run generate.typescript
          git clone --depth 1 https://$API_TOKEN_GITHUB@github.com/phrase/phrase-js.git clones/typescript &> /dev/null
          rsync -avI --delete --exclude='.git/' clients/typescript/ clones/typescript
          cd clones/typescript
          git status --verbose
          if [ -n "$(git status --porcelain)" ]; then
          git config --global user.email "support@phrase.com"
          git config --global user.name "Phrase"
          git add .
          git commit --message "Deploying from  phrase/openapi@${GITHUB_SHA::8}"
          git push origin master
          else
          echo "  No changes, skipping."
          fi

  build-python:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Build and Deploy üöÄ
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install
          npm run generate.python
          git clone --depth 1 https://$API_TOKEN_GITHUB@github.com/phrase/phrase-python.git clones/python &> /dev/null
          rsync -avI --delete --exclude='.git/' clients/python/ clones/python
          cd clones/python
          git status --verbose
          if [ -n "$(git status --porcelain)" ]; then
          git config --global user.email "support@phrase.com"
          git config --global user.name "Phrase"
          git add .
          git commit --message "Deploying from  phrase/openapi@${GITHUB_SHA::8}"
          git push origin master
          else
          echo "  No changes, skipping."
          fi

  build-swift:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Build and Deploy üöÄ
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install
          npm run generate.swift
          git clone --depth 1 https://$API_TOKEN_GITHUB@github.com/phrase/phrase-swift.git clones/swift &> /dev/null
          rsync -avI --delete --exclude='.git/' clients/swift/ clones/swift
          cd clones/swift
          git status --verbose
          if [ -n "$(git status --porcelain)" ]; then
          git config --global user.email "support@phrase.com"
          git config --global user.name "Phrase"
          git add .
          git commit --message "Deploying from  phrase/openapi@${GITHUB_SHA::8}"
          git push origin master
          else
          echo "  No changes, skipping."
          fi

  build-java:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Build and Deploy üöÄ
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install
          npm run generate.java
          git clone --depth 1 https://$API_TOKEN_GITHUB@github.com/phrase/phrase-java.git clones/java &> /dev/null
          rsync -avI --delete --exclude='.git/' clients/java/ clones/java
          cd clones/java
          git status --verbose
          if [ -n "$(git status --porcelain)" ]; then
          git config --global user.email "support@phrase.com"
          git config --global user.name "Phrase"
          git add .
          git commit --message "Deploying from  phrase/openapi@${GITHUB_SHA::8}"
          git push origin master
          else
          echo "  No changes, skipping."
          fi

  build-kotlin:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Build and Deploy üöÄ
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # npm install
          # npm run generate.kotlin
          # git clone --depth 1 https://$API_TOKEN_GITHUB@github.com/phrase/phrase-kotlin.git clones/kotlin &> /dev/null
          # rsync -avI --delete --exclude='.git/' clients/kotlin/ clones/kotlin
          # cd clones/kotlin
          # git status --verbose
          # if [ -n "$(git status --porcelain)" ]; then
          # git config --global user.email "support@phrase.com"
          # git config --global user.name "Phrase"
          # git add .
          # git commit --message "Deploying from  phrase/openapi@${GITHUB_SHA::8}"
          # git push origin master
          # else
          # echo "  No changes, skipping."
          # fi

  build-php:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Build and Deploy üöÄ
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install
          npm run generate.php
          git clone --depth 1 https://$API_TOKEN_GITHUB@github.com/phrase/phrase-php.git clones/php &> /dev/null
          rsync -avI --delete --exclude='.git/' clients/php/ clones/php
          cd clones/php
          git status --verbose
          if [ -n "$(git status --porcelain)" ]; then
          git config --global user.email "support@phrase.com"
          git config --global user.name "Phrase"
          git add .
          git commit --message "Deploying from  phrase/openapi@${GITHUB_SHA::8}"
          git push origin master
          else
          echo "  No changes, skipping."
          fi

  build-csharp:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Build and Deploy üöÄ
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install
          npm run generate.csharp
          git clone --depth 1 https://$API_TOKEN_GITHUB@github.com/phrase/phrase-csharp.git clones/csharp &> /dev/null
          rsync -avI --delete --exclude='.git/' clients/csharp/ clones/csharp
          cd clones/csharp
          git status --verbose
          if [ -n "$(git status --porcelain)" ]; then
          git config --global user.email "support@phrase.com"
          git config --global user.name "Phrase"
          git add .
          git commit --message "Deploying from  phrase/openapi@${GITHUB_SHA::8}"
          git push origin master
          else
          echo "  No changes, skipping."
          fi
