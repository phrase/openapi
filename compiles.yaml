openapi: 3.0.3
info:
  title: Phrase API Reference
  version: 2.0.0
  description: >
    Phrase is a translation management platform for software projects. You can
    collaborate on language file translation with your team or order
    translations through our platform. The API allows you to import locale
    files, download locale files, tag keys or interact in other ways with the
    localization data stored in Phrase for your account.

    ## API Endpoint

    <div class="resource__code--outer">
      <div class="code-section">
        <pre><code>https://api.phrase.com/v2/</code></pre>
      </div>
    </div>

    The API is only accessible via HTTPS, the base URL is <code>https://api.phrase.com/</code>, and the current version is <code>v2</code> which results in the base URL for all requests: <code>https://api.phrase.com/v2/</code>.


    ## Usage

    [curl](http://curl.haxx.se/) is used primarily to send requests to Phrase in the examples. On most you'll find a second variant using the [Phrase API v2 client](https://phrase.com/cli/) that might be more convenient to handle. For further information check its [documentation](https://help.phrase.com/help/phrase-in-your-terminal).


    ## Use of HTTP Verbs

    Phrase API v2 tries to use the appropriate HTTP verb for accessing each endpoint according to REST specification where possible:

    <div class="table-responsive">
      <table class="basic-table">
        <thead>
          <tr class="basic-table__row basic-table__row--header">
            <th class="basic-table__cell basic-table__cell--header">Verb</th>
            <th class="basic-table__cell basic-table__cell--header">Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td class="basic-table__cell">GET</td>
            <td class="basic-table__cell">Retrieve one or multiple resources</td>
          </tr>
          <tr>
            <td class="basic-table__cell">POST</td>
            <td class="basic-table__cell">Create a resource</td>
          </tr>
          <tr>
            <td class="basic-table__cell">PUT</td>
            <td class="basic-table__cell">Update a resource</td>
          </tr>
          <tr>
            <td class="basic-table__cell">PATCH</td>
            <td class="basic-table__cell">Update a resource (partially)</td>
          </tr>
          <tr>
            <td class="basic-table__cell">DELETE</td>
            <td class="basic-table__cell">Delete a resource</td>
          </tr>
        </tbody>
      </table>
    </div>


    ## Identification via User-Agent

    You must include the User-Agent header with the name of your application or project. It might be a good idea to include some sort of contact information  as well, so that we can get in touch if necessary (e.g. to warn you about Rate-Limiting or badly formed requests). Examples of excellent User-Agent headers:

    <pre><code>User-Agent: Frederiks Mobile App (frederik@phrase.com) User-Agent: ACME Inc Python Client (http://example.com/contact)</code></pre>

    If you don't send this header, you will receive a response with 400 Bad Request.


    ## Lists

    When you request a list of resources, the API will typically only return an array of resources including their most important attributes. For a detailed representation of the resource you should request its detailed representation.

    Lists are usually [paginated](#pagination).


    ## Parameters

    Many endpoints support additional parameters, e.g. for pagination. When passing them in a GET request you can send them as HTTP query string parameters:

    <pre><code>$ curl -u EMAIL_OR_ACCESS_TOKEN "https://api.phrase.com/v2/projects?page=2"</code></pre>

    When performing a POST, PUT, PATCH or DELETE request, we recommend sending parameters that are not already included in the URL, as JSON body:

    <pre><code>$ curl -H 'Content-Type: application/json' -d '{"name":"My new project"}' -u EMAIL_OR_ACCESS_TOKEN https://api.phrase.com/v2/projects</code></pre>

    Encoding parameters as JSON means better support for types (boolean, integer) and usually better readability. Don't forget to set the correct Content-Type for your request.

    *The Content-Type header is omitted in some of the following examples for better readbility.*


    ## Errors


    ### Request Errors

    If a request contains invalid JSON or is missing a required parameter (besides resource attributes), the status `400 Bad Request` is returned:

    <pre><code>{
      "message": "JSON could not be parsed"
    }</code></pre>


    ### Validation Errors

    When the validation for a resource fails, the status `422 Unprocessable Entity` is returned, along with information on the affected fields:

    <pre><code>{
      "message": "Validation Failed",
      "errors": [
        {
          "resource": "Project",
          "field": "name",
          "message": "can't be blank"
        }
      ]
    }</code></pre>


    ## Date Format

    Times and dates are returned and expected in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) date format:

    <pre><code>YYYY-MM-DDTHH:MM:SSZ</code></pre>

    Instead of 'Z' for UTC time zone you can specify your time zone's locale offset using the following notation:

    <pre><code>YYYY-MM-DDTHH:MM:SS¬±hh:mm</code></pre>

    Example for CET (1 hour behind UTC):

    <pre><code>2015-03-31T13:00+01:00</code></pre>

    Please note that in HTTP headers, we will use the appropriate recommended date formats instead of ISO 8601.


    ## Authentication options

    <div class="alert alert-info">For more detailed information on authentication, check out the <a href="#authentication">API v2 Authentication Guide</a>.</div>

    There are two different ways to authenticate when performing API requests:

    * E-Mail and password * Oauth Access Token


    ### E-Mail and password

    To get started easily, you can use HTTP Basic authentication with your email and password:

    <pre><code>$ curl -u username:password "https://api.phrase.com/v2/projects"</code></pre>


    ### OAuth via Access Tokens

    You can create and manage access tokens in your [profile settings](https://app.phrase.com/settings/oauth_access_tokens) in Translation Center or via the [Authorizations API](#authorizations).

    Simply pass the access token as the username of your request:

    <pre><code>$ curl -u ACCESS_TOKEN: "https://api.phrase.com/v2/projects"</code></pre>

    or send the access token via the `Authorization` header field:

    <pre><code>$ curl -H "Authorization: token ACCESS_TOKEN" https://api.phrase.com/v2/projects</code></pre>

    For more detailed information on authentication, check out the <a href="#authentication">API v2 Authentication Guide</a>.

    ## Pagination

    Endpoints that return a list or resources will usually return paginated results and include 25 items by default. To access further pages, use the `page` parameter:

    <pre><code>$ curl -u EMAIL_OR_ACCESS_TOKEN "https://api.phrase.com/v2/projects?page=2"</code></pre>

    Some endpoints also allow a custom page size by using the `per_page` parameter:

    <pre><code>$ curl -u EMAIL_OR_ACCESS_TOKEN "https://api.phrase.com/v2/projects?page=2&per_page=50"</code></pre>

    Unless specified otherwise in the description of the respective endpoint, `per_page` allows you to specify a page size up to 100 items.


    ## Link-Headers

    We provide you with pagination URLs in the [Link Header field](http://tools.ietf.org/html/rfc5988). Make use of this information to avoid building pagination URLs yourself.

    <pre><code>Link: <https://api.phrase.com/v2/projects?page=1>; rel="first", <https://api.phrase.com/v2/projects?page=3>; rel="prev", <https://api.phrase.com/v2/projects?page=5>; rel="next", <https://api.phrase.com/v2/projects?page=9>; rel="last"</code></pre>

    Possible `rel` values are:

    <div class="table-responsive">
      <table class="basic-table">
        <thead>
          <tr class="basic-table__row basic-table__row--header">
            <th class="basic-table__cell basic-table__cell--header">Value</th>
            <th class="basic-table__cell basic-table__cell--header">Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td class="basic-table__cell">next</td>
            <td class="basic-table__cell">URL of the next page of results</td>
          </tr>
          <tr>
            <td class="basic-table__cell">last</td>
            <td class="basic-table__cell">URL of the last page of results</td>
          </tr>
          <tr>
            <td class="basic-table__cell">first</td>
            <td class="basic-table__cell">URL of the first page of results</td>
          </tr>
          <tr>
            <td class="basic-table__cell">prev</td>
            <td class="basic-table__cell">URL of the previous page of results</td>
          </tr>
        </tbody>
      </table>
    </div>

    ## Rate Limiting

    All API endpoints are subject to rate limiting to ensure good performance for all customers. The rate limit is calculated per user:

    * 1000 requests per 5 minutes * 4 concurrent (parallel) requests

    For your convenience we send information on the current rate limit within the response headers:

    <div class="table-responsive">
      <table class="basic-table">
        <thead>
          <tr class="basic-table__row basic-table__row--header">
            <th class="basic-table__cell basic-table__cell--header">Header</th>
            <th class="basic-table__cell basic-table__cell--header">Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td class="basic-table__cell" style="white-space: nowrap;"><code>X-Rate-Limit-Limit</code></td>
            <td class="basic-table__cell">Number of max requests allowed in the current time period</td>
          </tr>
          <tr>
            <td class="basic-table__cell" style="white-space: nowrap;"><code>X-Rate-Limit-Remaining</code></td>
            <td class="basic-table__cell">Number of remaining requests in the current time period</td>
          </tr>
          <tr>
            <td class="basic-table__cell" style="white-space: nowrap;"><code>X-Rate-Limit-Reset</code></td>
            <td class="basic-table__cell">Timestamp of end of current time period as UNIX timestamp</td>
          </tr>
        </tbody>
      </table>
    </div>

    If you should run into the rate limit, you will receive the HTTP status code `429: Too many requests`.

    If you should need higher rate limits, [contact us](https://phrase.com/contact).


    ## Conditional GET requests / HTTP Caching

    <div class="alert alert-info"><p><strong>Note:</strong> Conditional GET requests are currently only supported for <a href="#locales_download">locales#download</a> and <a href="#translations_index">translations#index</a></p></div>

    We will return an ETag or Last-Modified header with most GET requests. When you request a resource we recommend to store this value and submit them on subsequent requests as `If-Modified-Since` and `If-None-Match` headers. If the resource has not changed in the meantime, we will return the status `304 Not Modified` instead of rendering and returning the resource again. In most cases this is less time-consuming and makes your application/integration faster.

    Please note that all conditional requests that return a response with status 304 don't count against your rate limits.

    <pre><code>$ curl -i -u EMAIL_OR_ACCESS_TOKEN "https://api.phrase.com/v2/projects/1234abcd1234abcdefefabcd1234efab/locales/en/download" HTTP/1.1 200 OK ETag: "abcd1234abcdefefabcd1234efab1234" Last-Modified: Wed, 28 Jan 2015 15:31:30 UTC Status: 200 OK

    $ curl -i -u EMAIL_OR_ACCESS_TOKEN "https://api.phrase.com/v2/projects/1234abcd1234abcdefefabcd1234efab/locales/en/download" -H 'If-None-Match: "abcd1234abcdefefabcd1234efab1234"' HTTP/1.1 304 Not Modified ETag: "abcd1234abcdefefabcd1234efab1234" Last-Modified: Wed, 28 Jan 2015 15:31:30 UTC Status: 304 Not Modified

    $ curl -i -u EMAIL_OR_ACCESS_TOKEN "https://api.phrase.com/v2/projects/1234abcd1234abcdefefabcd1234efab/locales/en/download" -H "If-Modified-Since: Wed, 28 Jan 2015 15:31:30 UTC" HTTP/1.1 304 Not Modified Last-Modified: Wed, 28 Jan 2015 15:31:30 UTC Status: 304 Not Modified</code></pre>


    ## JSONP

    The Phrase API supports [JSONP](http://en.wikipedia.org/wiki/JSONP) for all GET requests in order to deal with cross-domain request issues. Just send a `?callback` parameter along with the request to specify the Javascript function name to be called with the response content:

    <pre><code>$ curl "https://api.phrase.com/v2/projects?callback=myFunction"</code></pre>

    The response will include the normal output for that endpoint, along with a `meta` section including header data:

    <pre><code>myFunction({
      {
        "meta": {
          "status": 200,
          ...
        },
        "data": [
          {
            "id": "1234abcd1234abc1234abcd1234abc"
            ...
          }
        ]
      }
    });</code></pre>

    To authenticate a JSONP request, you can send a valid [access token](#authentication) as the `?access_token` parameter along the request:

    <pre><code>$ curl "https://api.phrase.com/v2/projects?callback=myFunction&access_token=ACCESS-TOKEN"</code></pre>
  contact:
    name: Phrase Support
    url: https://developers.phrase.com/api/
    email: support@phrase.com
  x-logo:
    url: https://developers.phrase.com/images/phrase-logo.png
    backgroundColor: "#0091eb"
    altText: Phrase
servers:
  - url: https://api.phrase.com/v2
security:
  - Token: []
  - Basic: []
tags:
  - name: Spaces
    description: Everything about Space
components:
  securitySchemes:
    Token:
      type: apiKey
      in: header
      name: Authorization
      description: Enter your token in the format **token TOKEN**
    Basic:
      type: http
      scheme: basic
  headers:
    X-PhraseApp-OTP:
      description: The number of allowed requests in the current period
      schema:
        type: string
    X-Rate-Limit-Limit:
      description: The number of allowed requests in the current period
      schema:
        type: integer
    X-Rate-Limit-Remaining:
      description: The number of remaining requests in the current period
      schema:
        type: integer
    X-Rate-Limit-Reset:
      description: The number of seconds left in the current period
      schema:
        type: integer
  schemas:
    account:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        company:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
    project:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        main_format:
          type: string
        project_image_url:
          type: string
        account:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
      example:
        id: abcd1234cdef1234abcd1234cdef1234
        name: My Android Project
        main_format: xml
        project_image_url: http://assets.example.com/project.png
        account: account
        created_at: 2015-01-28T09:52:53Z
        updated_at: 2015-01-28T09:52:53Z
    space:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        projects_count:
          type: integer
          format: int32
        projects:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              main_format:
                type: string
              project_image_url:
                type: string
              account:
                type: string
              created_at:
                type: string
              updated_at:
                type: string
            example:
              id: abcd1234cdef1234abcd1234cdef1234
              name: My Android Project
              main_format: xml
              project_image_url: http://assets.example.com/project.png
              account: account
              created_at: 2015-01-28T09:52:53Z
              updated_at: 2015-01-28T09:52:53Z
        created_at:
          type: string
        updated_at:
          type: string
      example:
        id: 2e7574e8f2372906a03110c2a7cfe671
        name: My first space
        created_at: 2020-02-25T12:17:25Z
        updated_at: 2020-03-13T14:46:57Z
        projects_count: 2
        projects:
          - id: abcd1234cdef1234abcd1234cdef1234
            name: My Android Project
            main_format: xml
            project_image_url: http://assets.example.com/project.png
            account: account
            created_at: 2015-01-28T09:52:53Z
            updated_at: 2015-01-28T09:52:53Z
          - id: abcd11231fadef1234adacd1234cdef1234
            name: My IOS Project
            main_format: yml
            project_image_url: http://assets.example.com/project2.png
            account: account
            created_at: 2015-01-28T09:52:53Z
            updated_at: 2015-01-28T09:52:53Z
    errors:
      type: object
      properties:
        message:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              resource:
                type: string
              field:
                type: string
              message:
                type: string
      example:
        message: Validation Failed
        errors:
          - resource: Resource
            field: name
            message: can't be blank
  parameters:
    X-PhraseApp-OTP:
      in: header
      name: X-PhraseApp-OTP
      description: Two-Factor-Authentication token
      required: false
      allowEmptyValue: false
      schema:
        type: string
    account_id:
      in: path
      name: account_id
      description: Account ID
      required: true
      schema:
        type: string
    space_id:
      in: path
      name: space_id
      description: Space ID
      required: true
      schema:
        type: string
    project_id:
      in: path
      name: project_id
      description: Project ID
      required: true
      schema:
        type: string
    page:
      in: query
      name: page
      description: Page number
      required: false
      allowEmptyValue: false
      schema:
        type: integer
      example: 1
    per_page:
      in: query
      name: per_page
      description: allows you to specify a page size up to 100 items, 10 by default
      required: false
      allowEmptyValue: false
      schema:
        type: integer
      example: 10
  responses:
    "204":
      description: The resource was deleted successfully.
    "400":
      description: Bad request
    "404":
      description: Not Found
    "422":
      description: Unprocessable entity
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
              errors:
                type: array
                items:
                  type: object
                  properties:
                    resource:
                      type: string
                    field:
                      type: string
                    message:
                      type: string
            example:
              message: Validation Failed
              errors:
                - resource: Resource
                  field: name
                  message: can't be blank
    "429":
      description: Rate Limiting
      headers:
        X-Rate-Limit-Limit:
          description: The number of allowed requests in the current period
          schema:
            type: integer
        X-Rate-Limit-Remaining:
          description: The number of remaining requests in the current period
          schema:
            type: integer
        X-Rate-Limit-Reset:
          description: The number of seconds left in the current period
          schema:
            type: integer
    "503":
      description: Server error
paths:
  "/accounts/{account_id}/spaces":
    get:
      summary: List all Spaces for the given account.
      operationId: spaces
      tags:
        - Spaces
      parameters:
        - in: path
          name: account_id
          description: Account ID
          required: true
          schema:
            type: string
        - in: header
          name: X-PhraseApp-OTP
          description: Two-Factor-Authentication token
          required: false
          allowEmptyValue: false
          schema:
            type: string
        - in: query
          name: page
          description: Page number
          required: false
          allowEmptyValue: false
          schema:
            type: integer
          example: 1
        - in: query
          name: per_page
          description: allows you to specify a page size up to 100 items, 10 by default
          required: false
          allowEmptyValue: false
          schema:
            type: integer
          example: 10
      responses:
        "200":
          description: A JSON array of spaces
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    projects_count:
                      type: integer
                      format: int32
                    projects:
                      type: array
                      items:
                        $ref: "#/components/schemas/space/properties/projects/items"
                    created_at:
                      type: string
                    updated_at:
                      type: string
                  example:
                    id: 2e7574e8f2372906a03110c2a7cfe671
                    name: My first space
                    created_at: 2020-02-25T12:17:25Z
                    updated_at: 2020-03-13T14:46:57Z
                    projects_count: 2
                    projects:
                      - id: abcd1234cdef1234abcd1234cdef1234
                        name: My Android Project
                        main_format: xml
                        project_image_url: http://assets.example.com/project.png
                        account: account
                        created_at: 2015-01-28T09:52:53Z
                        updated_at: 2015-01-28T09:52:53Z
                      - id: abcd11231fadef1234adacd1234cdef1234
                        name: My IOS Project
                        main_format: yml
                        project_image_url: http://assets.example.com/project2.png
                        account: account
                        created_at: 2015-01-28T09:52:53Z
                        updated_at: 2015-01-28T09:52:53Z
              example:
                - id: 2e7574e8f2372906a03110c2a7cfe671
                  name: My first space
                  created_at: 2020-02-25T12:17:25Z
                  updated_at: 2020-03-13T14:46:57Z
                  projects_count: 2
                  projects:
                    - id: abcd1234cdef1234abcd1234cdef1234
                      name: My Android Project
                      main_format: xml
                      project_image_url: http://assets.example.com/project.png
                      account: account
                      created_at: 2015-01-28T09:52:53Z
                      updated_at: 2015-01-28T09:52:53Z
                    - id: abcd11231fadef1234adacd1234cdef1234
                      name: My IOS Project
                      main_format: yml
                      project_image_url: http://assets.example.com/project2.png
                      account: account
                      created_at: 2015-01-28T09:52:53Z
                      updated_at: 2015-01-28T09:52:53Z
                - id: 2e7574e8f2372906a03110c2a7cfe671
                  name: My first space
                  created_at: 2020-02-25T12:17:25Z
                  updated_at: 2020-03-13T14:46:57Z
                  projects_count: 2
                  projects:
                    - id: abcd1234cdef1234abcd1234cdef1234
                      name: My Android Project
                      main_format: xml
                      project_image_url: http://assets.example.com/project.png
                      account: account
                      created_at: 2015-01-28T09:52:53Z
                      updated_at: 2015-01-28T09:52:53Z
                    - id: abcd11231fadef1234adacd1234cdef1234
                      name: My IOS Project
                      main_format: yml
                      project_image_url: http://assets.example.com/project2.png
                      account: account
                      created_at: 2015-01-28T09:52:53Z
                      updated_at: 2015-01-28T09:52:53Z
        "400":
          description: Bad request
        "404":
          description: Not Found
        "429":
          description: Rate Limiting
          headers:
            X-Rate-Limit-Limit:
              $ref: "#/components/responses/429/headers/X-Rate-Limit-Limit"
            X-Rate-Limit-Remaining:
              $ref: "#/components/responses/429/headers/X-Rate-Limit-Remaining"
            X-Rate-Limit-Reset:
              $ref: "#/components/responses/429/headers/X-Rate-Limit-Reset"
      x-code-samples:
        - lang: Curl
          source: |
            curl "https://api.phrase.com/v2/accounts/:account_id/spaces" \
              -u USERNAME_OR_ACCESS_TOKEN
        - lang: CLI
          source: phraseapp spaces list <account_id>
    post:
      summary: Create space
      operationId: space_create
      tags:
        - Spaces
      parameters:
        - $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/parameters/0"
        - $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/parameters/1"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
            example:
              name: My Android Projects
      responses:
        "201":
          description: A JSON array of space
          content:
            application/json:
              schema:
                $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/responses/200/content/a\
                  pplication~1json/schema/items"
        "400":
          $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/responses/400"
        "404":
          $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/responses/404"
        "429":
          $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/responses/429"
      x-code-samples:
        - lang: Curl
          source: |
            curl "https://api.phrase.com/v2/accounts/:account_id/spaces" \
              -u USERNAME_OR_ACCESS_TOKEN \
              -X POST \
              -d '{"name":"My Android Projects"}' \
              -H 'Content-Type: application/json'
        - lang: CLI
          source: |
            phraseapp space create <account_id> --name "My Android Projects"
  "/accounts/{account_id}/spaces/{space_id}":
    get:
      summary: Get Space
      operationId: space
      tags:
        - Spaces
      parameters:
        - $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/parameters/0"
        - in: path
          name: space_id
          description: Space ID
          required: true
          schema:
            type: string
        - $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/parameters/1"
      responses:
        "200":
          description: A JSON object of Space
          content:
            application/json:
              schema:
                $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/responses/200/content/a\
                  pplication~1json/schema/items"
              example:
                id: 2e7574e8f2372906a03110c2a7cfe671
                name: My first space
                created_at: 2020-02-25T12:17:25Z
                updated_at: 2020-03-13T14:46:57Z
                projects_count: 2
                projects:
                  - id: abcd1234cdef1234abcd1234cdef1234
                    name: My Android Project
                    main_format: xml
                    project_image_url: http://assets.example.com/project.png
                    account: account
                    created_at: 2015-01-28T09:52:53Z
                    updated_at: 2015-01-28T09:52:53Z
                  - id: abcd11231fadef1234adacd1234cdef1234
                    name: My IOS Project
                    main_format: yml
                    project_image_url: http://assets.example.com/project2.png
                    account: account
                    created_at: 2015-01-28T09:52:53Z
                    updated_at: 2015-01-28T09:52:53Z
        "400":
          $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/responses/400"
        "404":
          $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/responses/404"
        "429":
          $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/responses/429"
      x-code-samples:
        - lang: Curl
          source: |
            curl "https://api.phrase.com/v2/accounts/:account_id/spaces/:id" \
              -u USERNAME_OR_ACCESS_TOKEN
        - lang: CLI
          source: phraseapp space show <account_id> <id>
    patch:
      summary: Update Space
      operationId: space_update
      tags:
        - Spaces
      parameters:
        - $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/parameters/0"
        - $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces~1%7Bspace_id%7D/get/paramet\
            ers/1"
        - $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/parameters/1"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
            example:
              name: My Android Projects
      responses:
        "200":
          description: A JSON object of Space
          content:
            application/json:
              schema:
                $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/responses/200/content/a\
                  pplication~1json/schema/items"
              example:
                id: 2e7574e8f2372906a03110c2a7cfe671
                name: My first space
                created_at: 2020-02-25T12:17:25Z
                updated_at: 2020-03-13T14:46:57Z
                projects_count: 2
                projects:
                  - id: abcd1234cdef1234abcd1234cdef1234
                    name: My Android Project
                    main_format: xml
                    project_image_url: http://assets.example.com/project.png
                    account: account
                    created_at: 2015-01-28T09:52:53Z
                    updated_at: 2015-01-28T09:52:53Z
                  - id: abcd11231fadef1234adacd1234cdef1234
                    name: My IOS Project
                    main_format: yml
                    project_image_url: http://assets.example.com/project2.png
                    account: account
                    created_at: 2015-01-28T09:52:53Z
                    updated_at: 2015-01-28T09:52:53Z
        "400":
          $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/responses/400"
        "404":
          $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/responses/404"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: "#/components/responses/422/content/application~1json/schema"
        "429":
          $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/responses/429"
      x-code-samples:
        - lang: Curl
          source: |
            curl "https://api.phrase.com/v2/accounts/:account_id/spaces/:id" \
              -u USERNAME_OR_ACCESS_TOKEN \
              -X PATCH \
              -d '{"name":"My Android Projects"}' \
              -H 'Content-Type: application/json'
        - lang: CLI
          source: phraseapp space update <account_id> <id> --name "My Android Projects"
    delete:
      summary: Delete Space
      operationId: space_delete
      tags:
        - Spaces
      parameters:
        - $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/parameters/0"
        - $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces~1%7Bspace_id%7D/get/paramet\
            ers/1"
        - $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/parameters/1"
      responses:
        "204":
          description: The resource was deleted successfully.
        "400":
          $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/responses/400"
        "404":
          $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/responses/404"
        "429":
          $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/responses/429"
      x-code-samples:
        - lang: Curl
          source: |
            curl "https://api.phrase.com/v2/accounts/:account_id/spaces/:id" \
              -u USERNAME_OR_ACCESS_TOKEN \
              -X DELETE
        - lang: CLI
          source: phraseapp space delete <account_id> <id>
  "/accounts/{account_id}/spaces/{space_id}/projects":
    get:
      summary: List all projects for the specified Space..
      operationId: space_projects
      tags:
        - Spaces
      parameters:
        - $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/parameters/0"
        - $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces~1%7Bspace_id%7D/get/paramet\
            ers/1"
        - $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/parameters/1"
        - $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/parameters/2"
        - $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/parameters/3"
      responses:
        "200":
          description: A JSON array of projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/space/properties/projects/items"
              example:
                - id: abcd1234cdef1234abcd1234cdef1234
                  name: My Android Project
                  main_format: xml
                  project_image_url: http://assets.example.com/project.png
                  account: account
                  created_at: 2015-01-28T09:52:53Z
                  updated_at: 2015-01-28T09:52:53Z
                - id: abcd1234cdef1234abcd1234cdef1234
                  name: My Android Project
                  main_format: xml
                  project_image_url: http://assets.example.com/project.png
                  account: account
                  created_at: 2015-01-28T09:52:53Z
                  updated_at: 2015-01-28T09:52:53Z
        "400":
          $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/responses/400"
        "404":
          $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/responses/404"
        "429":
          $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/responses/429"
      x-code-samples:
        - lang: Curl
          source: |
            curl "https://api.phrase.com/v2/accounts/:account_id/spaces" \
              -u USERNAME_OR_ACCESS_TOKEN
        - lang: CLI
          source: phraseapp spaces list <account_id>
    post:
      summary: Adds an existing project to the space.
      operationId: space_projects_create
      tags:
        - Spaces
      parameters:
        - $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/parameters/0"
        - $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces~1%7Bspace_id%7D/get/paramet\
            ers/1"
        - $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/parameters/1"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
            example:
              id: a4b3c2d1
      responses:
        "201":
          description: A JSON object of project
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/space/properties/projects/items"
        "400":
          $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/responses/400"
        "404":
          $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/responses/404"
        "429":
          $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/responses/429"
      x-code-samples:
        - lang: Curl
          source: >
            curl
            "https://api.phrase.com/v2/accounts/:account_id/spaces/:space_id/projects"
            \
              -u USERNAME_OR_ACCESS_TOKEN \
              -X POST \
              -d '{"id":"a4b3c2d1"}' \
              -H 'Content-Type: application/json'
        - lang: CLI
          source: >
            phraseapp spaces projects create <account_id> <space_id> \ --id
            a4b3c2d1
  "/accounts/{account_id}/spaces/{space_id}/projects/{project_id}":
    delete:
      summary: Removes a specified project from the specified space.
      operationId: space_project_delete
      tags:
        - Spaces
      parameters:
        - $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/parameters/0"
        - $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces~1%7Bspace_id%7D/get/paramet\
            ers/1"
        - in: path
          name: project_id
          description: Project ID
          required: true
          schema:
            type: string
        - $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/parameters/1"
      responses:
        "204":
          $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces~1%7Bspace_id%7D/delete/resp\
            onses/204"
        "400":
          $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/responses/400"
        "404":
          $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/responses/404"
        "429":
          $ref: "#/paths/~1accounts~1%7Baccount_id%7D~1spaces/get/responses/429"
      x-code-samples:
        - lang: Curl
          source: >
            curl
            "https://api.phrase.com/v2/accounts/:account_id/spaces/:space_id/projects/:id"
            \
              -u USERNAME_OR_ACCESS_TOKEN \
              -X DELETE
        - lang: CLI
          source: phraseapp spaces projects delete <account_id> <space_id> <id>
